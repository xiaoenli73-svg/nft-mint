我准备了九张用来mint nft的图片，以及对应的json文件，
json文件在C:\Users\Administrator\Desktop\nft-mint2.1\metadata路径内，
九张用于mint nft的图片存放在C:\Users\Administrator\Desktop\nft-mint2.1\images路径内，
且images文件与metadata文件均已上传到ipfs内，
images的url为：https://copper-total-grasshopper-936.mypinata.cloud/ipfs/bafybeifxkuvts23etamzbe4fczbfoudaes7fqkycl36spgmea7svzsfvli/
cid为：bafybeifxkuvts23etamzbe4fczbfoudaes7fqkycl36spgmea7svzsfvli；
 
metadata的url为https://copper-total-grasshopper-936.mypinata.cloud/ipfs/bafybeid3jtsaumr5gucsjhcie2jxp43ecep67tnrqhbm42xw6won7h55ee/；
cid为bafybeid3jtsaumr5gucsjhcie2jxp43ecep67tnrqhbm42xw6won7h55ee；
作为nft合集的图片与json文件在：C:\Users\Administrator\Desktop\nft-mint2.1\collection路径下，名字为10.png和10.json，并且已经将10.png和10.json上传到ipfs中。
目前只能实现单张nft铸造，我希望可以铸造一个nft合集，在solana链上，但是我们只是完成铸造合集的部分，合集内的九个nft交由用户去mint，用户可以使用我们开源的智能合约去铸造，且用户不能选择铸造获得的是哪张nft，每张nft的价格为0.1sol，请分析实现的可能行，和实现的方法，以及需要但还未提供的数据。

使用 createAndMint 创建一个作为合集的 NFT（或者仅创建 metadata+master edition），symbol、name 指向你的合集信息，sellerFeeBasisPoints 按需设置。
记录合集的 mint 地址，后续用于 Candy Machine 的 collection。

“合集”（Collection）需要一个主 NFT作为唯一标识。这个主 NFT 需要预先铸
定义合集的整体信息（名称、封面、总供应量等）；
作为所有子 NFT 的 “归属锚点”，子 NFT 通过链上数据关联到该主 NFT。




使用 Devnet 部署测试，合集 10.json 的完整 IPFS URI：https://copper-total-grasshopper-936.mypinata.cloud/ipfs/bafkreiapeyqdeknjpprwv4bpboxom2ua3v6lxzihaykeyc6pww2ruzuji4；
9 个条目的 metadata.json 完整 URI 列表，关于1~9 的 URI，其json文件是以 1.json~9.json 命名，metadata CID：bafybeid3jtsaumr5gucsjhcie2jxp43ecep67tnrqhbm42xw6won7h55ee，URI为https://copper-total-grasshopper-936.mypinata.cloud/ipfs/bafybeid3jtsaumr5gucsjhcie2jxp43ecep67tnrqhbm42xw6won7h55ee/1.json
…
https://copper-total-grasshopper-936.mypinata.cloud/ipfs/bafybeid3jtsaumr5gucsjhcie2jxp43ecep67tnrqhbm42xw6won7h55ee/9.json；关于图片 IPFS 基础路径，其图片文件是以 1.png~9.png 命名
图片 CID：bafybeifxkuvts23etamzbe4fczbfoudaes7fqkycl36spgmea7svzsfvli；
URI为：
https://copper-total-grasshopper-936.mypinata.cloud/ipfs/bafybeifxkuvts23etamzbe4fczbfoudaes7fqkycl36spgmea7svzsfvli/1.png
...
https://copper-total-grasshopper-936.mypinata.cloud/ipfs/bafybeifxkuvts23etamzbe4fczbfoudaes7fqkycl36spgmea7svzsfvli/1.png

确认收款钱包地址：D5QfaYVrMEKmsrwwcLLr7qXF8P5pgAZtUmxQJUBbg1xm；
版税：500；
每个json文件都含有：
    "properties": { 
        "creators": [{"address": "D5QfaYVrMEKmsrwwcLLr7qXF8P5pgAZtUmxQJUBbg1xm", "share": 100}]
    }

开售时间 startDate：2025年10月10日
每钱包 mint 上限 mintLimit设置为1
反机器人税 botTax暂时不配置
白名单 allowList暂时不配置
按照顺序铸造即可


我刚把部署脚本修好并完成了 Devnet 部署；现在给出部署结果，并说明如何测试 mint。
Collection Mint: CpzcezvUBtgAG248j5RYCrtCHtpkcxDZeTzHz4hTs4b
Candy Guard: 8sWXN93HEpdGHGCFVPanwmPa6JQMu1Tz6kZqNpb6zVfK
Candy Machine: 4ZnwTmHLo98fcg7i9TXuMWH5njRxpexe52GxXVcEGFzJ
已写入条目: 9（顺序 1→9）
价格: 0.1 SOL（收款地址 D5QfaYVrMEKmsrwwcLLr7qXF8P5pgAZtUmxQJUBbg1xm）
startDate: 部署瞬时（已可立即 mint）
mintLimit: { id: 1, limit: 1 }
备注
末尾出现了一次“Initialize（已弃用）/Borsh IO Error”的模拟报错，但在这之前 Candy Machine 已创建、条目已写入、authority 已切换至 Candy Guard，不影响你现在进行 mint 测试。如果担心，可让我帮你再读链上账户做一次校验。
测试 mint（用户视角）
你可以直接把 Candy Machine 地址接入现成的 Candy Machine v3 前端（Umi/JS 前端模板均可），支付 0.1 SOL 即可按顺序拿到 1→9 中的下一个 NFT，无法自选编号。
Devnet 钱包需有足够 SOL；mintLimit=1，单钱包只能 mint 一次。
我已经：
新增并安装依赖，打开 ES 模块支持。
创建合集 NFT（使用你提供的 10.json URI）。
创建 Candy Guard（价格 0.1 SOL、startDate=当前、mintLimit id=1）。
创建 Candy Machine（容量 9）、写入 9 个 metadata URI（顺序 1→9）。
将 Candy Machine authority 交给 Candy Guard。
你现在可以直接用上述地址进行前端集成与用户 mint 测试。如果需要，我可以再加一个本地“用户一键 mint”脚本帮你验证交易成功并打印新 NFT 的 mint 地址。

npm run deploy:cm

